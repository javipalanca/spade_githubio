---
import BaseLayout from '../layouts/BaseLayout.astro';
import Navbar from '../components/Navbar.astro';
import Hero from '../components/Hero.astro';
import Footer from '../components/Footer.astro';
import PythonCodeBlock from '../components/PythonCodeBlock.astro';

// Import new section components
import BadgeSection from '../components/BadgeSection.astro';
import FeaturesSection from '../components/FeaturesSection.astro';
import SpadeLLMSection from '../components/SpadeLLMSection.astro';
import CodeExampleSection from '../components/CodeExampleSection.astro';
import PluginsSection from '../components/PluginsSection.astro';
import InteractiveDemoSection from '../components/InteractiveDemoSection.astro';
import GettingStartedSection from '../components/GettingStartedSection.astro';
import UseCasesSection from '../components/UseCasesSection.astro';
import FAQSection from '../components/FAQSection.astro';
import StatisticsSection from '../components/StatisticsSection.astro';
import NewsSection from '../components/NewsSection.astro';

// Define features data
const features = [
    {
        icon: 'üîå',
        title: 'XMPP-Based',
        description: 'Built on the XMPP protocol for robust, real-time messaging between agents and humans.',
        features: ['Standardized messaging', 'Presence notification', 'Security features']
    },
    {
        icon: '‚öôÔ∏è',
        title: 'Behaviour-Based Model',
        description: 'Define agent behaviors using cyclic, periodic, one-shot, and finite state machine patterns.',
        features: ['Modular design', 'Task specialization', 'Complex workflow support']
    },
    {
        icon: 'üîÑ',
        title: 'Asyncio Support',
        description: 'Modern asynchronous programming with Python\'s asyncio for concurrent agent operations.',
        features: ['Non-blocking operations', 'Efficient resource usage', 'Modern Python practices']
    },
    {
        icon: 'üëÅÔ∏è',
        title: 'Presence Awareness',
        description: 'Real-time presence notification system to monitor agent status and availability.',
        features: ['Status tracking', 'Automatic reconnection', 'System monitoring']
    },
    {
        icon: 'üåê',
        title: 'Web Interface',
        description: 'Built-in web interface for easy monitoring and interaction with your agents.',
        features: ['Message visualization', 'Agent status dashboard', 'Customizable UI']
    },
    {
        icon: 'üß†',
        title: 'LLM Integration',
        description: 'Seamless integration with Large Language Models for intelligent agent reasoning and natural language processing.',
        features: ['AI-powered agents', 'Natural language understanding', 'Contextual reasoning']
    }
];

// Define plugins data
const plugins = [
    {
        name: 'SpadeLLM',
        description: 'Production-ready LLM integration with guardrails, memory, human-in-the-loop, and advanced tool support for secure AI agents.',
        icon: 'brain',
        githubUrl: 'https://github.com/sosanzma/spade_llm',
        docsUrl: 'https://sosanzma.github.io/spade_llm/',
        featured: true
    },
    {
        name: 'SPADE BDI',
        description: 'Implement Belief-Desire-Intention agents with AgentSpeak language support.',
        icon: 'brain',
        githubUrl: 'https://github.com/javipalanca/spade_bdi',
        docsUrl: 'https://spade-bdi.readthedocs.io'
    },
    {
        name: 'SPADE PubSub',
        description: 'Add publish-subscribe communication patterns to your agent platform.',
        icon: 'broadcast',
        githubUrl: 'https://github.com/javipalanca/spade_pubsub',
        docsUrl: 'https://spade-pubsub.readthedocs.io'
    },
    {
        name: 'SPADE Artifact',
        description: 'Create and manage artifacts for your agents to interact with.',
        icon: 'box',
        githubUrl: 'https://github.com/javipalanca/spade_artifact',
        docsUrl: 'https://spade-artifact.readthedocs.io'
    },
    {
        name: 'SPADE Norms',
        description: 'Implement normative systems to regulate agent behaviors.',
        icon: 'shield-check',
        githubUrl: 'https://github.com/javipalanca/spade_norms',
        docsUrl: 'https://spade-norms.readthedocs.io'
    },
    {
        name: 'SPADE Bokeh',
        description: 'Integrate interactive Bokeh plots with your agent interfaces.',
        icon: 'graph-up',
        githubUrl: 'https://github.com/javipalanca/spade_bokeh',
        docsUrl: 'https://spade-bokeh.readthedocs.io'
    }
];
---

<BaseLayout title="SPADE - Smart Python Agent Development Environment">
    <Navbar />
    <Hero />
    
    <BadgeSection />
    <StatisticsSection />
    <FeaturesSection features={features} />
    <CodeExampleSection />
    <PluginsSection plugins={plugins} />
    <GettingStartedSection />
    <UseCasesSection />
    <SpadeLLMSection />
    <FAQSection />
    <NewsSection />
    <InteractiveDemoSection />
    <Footer />
</BaseLayout>
